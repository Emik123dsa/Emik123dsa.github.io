@font-face{font-family:'Montserrat Regular';src:url(../fonts/Montserrat-Regular.eot);src:url(../fonts/Montserrat-Regular.eot?#iefix) format("embedded-opentype"),url(../fonts/Montserrat-Regular.woff) format("woff"),url(../fonts/Montserrat-Regular.ttf) format("truetype");font-weight:400;font-style:normal}@font-face{font-family:'Montserrat Hairline';src:url(../fonts/MontserratHair.ttf) format("truetype");font-weight:400;font-style:normal}body{font-family:'Montserrat Regular';background-color:#f5f6f8}p{margin:0!important;padding:0!important}li{margin:0;padding:0}h1,h2,h3,h4,h5,h6{text-transform:uppercase}.title{letter-spacing:2px;font-weight:900;text-transform:uppercase;font-family:'Montserrat Hairline';font-size:24px}.title-header{line-height:80px;letter-spacing:3.6px;font-size:72px;letter-spacing:2px;font-weight:500;color:#0c0c0c;text-transform:uppercase;font-family:'Montserrat Hairline'}.logo{margin-right:29px;position:relative;background:url(../img/snow.svg);background-repeat:no-repeat;background-position:center center;padding:25px;background-size:contain}.logo::before{position:absolute;content:'';width:1px;height:50px;border-radius:50%;background:rgba(44,62,80,.2);right:-14px;top:50%;transform:translateY(-50%)}.menu-aside{position:relative;margin-left:34px;padding:0 10px}.menu-span{top:50%;left:0;transform:translateY(-50%);width:100%;height:2px;border-radius:5px;background:#0c0c0c;content:'';position:absolute}.menu-span::before{top:0;border-radius:5px;transform:translateY(-5px);background:#0c0c0c;content:'';position:absolute;height:2px;width:100%}.menu-span::after{bottom:0;border-radius:5px;transform:translateY(5px);background:#0c0c0c;content:'';position:absolute;height:2px;width:100%}*{box-sizing:border-box}.container{max-width:965px;width:100%;margin:0 auto}::-moz-selection{background:rgba(52,73,94,.2)}::selection{background:rgba(52,73,94,.2)}.features{margin-top:30vh}.features_card{padding:25px 15px;text-align:center;width:244px}.features_cards{justify-content:space-around;display:flex;flex-wrap:wrap;flex-basis:100%;position:relative}.features_card_image{margin-bottom:50px}.features_card_about p{font-size:14px;color:#232323;font-family:'Montserrat Regular';line-height:22px;letter-spacing:.7px;font-weight:800}.features_card_about{margin-bottom:32px}.features_card_description span{font-family:'Montserrat Regular';font-size:14px;font-weight:600;line-height:22px;opacity:.5}.features_card_description{margin-bottom:28px}.card{background:url(../img/card.svg) center center no-repeat;padding:20px;background-size:contain}.edit{background:url(../img/edit.svg) center center no-repeat;padding:25px;background-size:contain}.envelop{background:url(../img/envelop.svg) center center no-repeat;padding:20px;background-size:contain}.navbar{position:relative}.navbar_wrap_body_ul{display:flex;align-items:center}.navbar_link_menu{font-size:12px;margin:0 15px;font-weight:800;font-family:'Montserrat Regular';text-transform:uppercase}.navbar_wrap{position:relative;min-height:80px;display:flex;align-items:center;justify-content:space-between}.navbar::before{bottom:0;width:100%;left:0;height:1px;background:#232323;content:'';opacity:.2;position:absolute}.navbar_wrap_body{display:flex;align-items:center}.navbar_wrap_body_features{display:flex;align-items:center}.navbar_link_menu{position:relative;transition:.2s ease}.navbar_link_menu::before{transition:.2s ease;bottom:-32px;width:0;content:'';height:3px;transform:scale(0);opacity:0;transform-origin:left center;border-top-left-radius:5px;border-top-right-radius:5px;position:absolute;background:rgba(44,62,80,.5)}.navbar_link_menu:hover::before{transition:.2s ease;bottom:-32px;width:100%;content:'';opacity:1;transform:scale(1);transform-origin:left center;height:3px;border-top-left-radius:5px;border-top-right-radius:5px;position:absolute;background:rgba(44,62,80,.9)}.hero-background{background:url(../img/background-hero.png);position:absolute;background-repeat:no-repeat;background-position:left top;top:0;opacity:1;background-size:cover;left:0;z-index:-1;width:100%;height:897px}.hero_wrap_header{width:400px;margin-top:10em}.hero_wrap_header_description{font-family:'Montserrat Regular';text-align:center;position:relative;font-size:12px;font-weight:900;margin-top:25px;text-transform:uppercase}.hero_wrap_subtitle{font-size:16px;color:#34495e;font-weight:800;text-transform:uppercase}.hero_wrap_iceland{position:relative}.hero_wrap_iceland::before{content:'';width:105px;height:2px;border-radius:50px;background:rgba(44,62,80,.5);top:50%;left:50%;transform:translateX(-175%);position:absolute}.hero_wrap_iceland::after{content:'';width:105px;height:2px;border-radius:50px;background:rgba(44,62,80,.5);top:50%;left:50%;transform:translateX(75%);position:absolute}.button-navbar{background-color:#000;padding:16px 18px;border-radius:5px;cursor:pointer;color:#fff;font-size:12px;font-family:'Montserrat Regular';font-weight:300;text-transform:uppercase;letter-spacing:.6px}.button-hero{background:url(../img/iceland.svg) no-repeat center center;position:relative;padding:50px;margin-bottom:25px;background-size:contain}@-ms-viewport{width:device-width}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,main,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}*,::after,::before{box-sizing:inherit}html{box-sizing:border-box;touch-action:manipulation;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-ms-overflow-style:scrollbar;-webkit-tap-highlight-color:transparent}body{line-height:1;font-family:sans-serif;text-align:left}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote::after,blockquote::before,q::after,q::before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}caption{caption-side:bottom}th{text-align:inherit}hr{box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace}pre{overflow:auto;-ms-overflow-style:scrollbar}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;cursor:help;-webkit-text-decoration-skip-ink:none;text-decoration-skip-ink:none}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}button{border-radius:0}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}input[type=date],input[type=datetime-local],input[type=month],input[type=time]{-webkit-appearance:listbox}textarea{overflow:auto;resize:vertical}button,input{overflow:visible}button,select{text-transform:none}select{word-wrap:normal}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}[tabindex="-1"]:focus{outline:0!important}fieldset{min-width:0}legend{max-width:100%;white-space:normal;color:inherit;display:block}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}output{display:inline-block}template{display:none}[hidden]{display:none}a{color:inherit;text-decoration:none}a:-moz-focusring,a:focus{outline:0}[role=button],button,input[type=button],input[type=reset],input[type=submit]{padding:0;border:0;font:inherit;font-size:100%;color:inherit;text-align:inherit;background:0 0;-webkit-appearance:button;-moz-appearance:button;appearance:button;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[role=button]:-moz-focusring,button:-moz-focusring,input[type=button]:-moz-focusring,input[type=reset]:-moz-focusring,input[type=submit]:-moz-focusring{outline:0}[role=button]:focus,button:focus,input[type=button]:focus,input[type=reset]:focus,input[type=submit]:focus{outline:0}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
